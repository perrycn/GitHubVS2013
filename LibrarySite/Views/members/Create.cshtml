@model LibrarySite.Models.member

@if (Model.member_type == "Adult")
{
    ViewBag.Title = "Create Adult";
}
else
{
    ViewBag.Title = "Create Juvenile";
}

<h2>@ViewBag.Title</h2>

@{
    var routeValues = new RouteValueDictionary();
    routeValues.Add("urlReferrer", Request.UrlReferrer);
}

@using (Html.BeginForm(routeValues)) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.lastname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.lastname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.lastname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.firstname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.firstname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.firstname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.middleinitial, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.middleinitial, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.middleinitial, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Model.member_type == "Adult")
        {
            <div class="form-group">
                @Html.LabelFor(model => model.adult.street, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.adult.street, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.adult.street, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.adult.city, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.adult.city, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.adult.city, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.adult.state, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.adult.state, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.adult.state, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.adult.zip, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.adult.zip, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.adult.zip, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.adult.phone_no, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.adult.phone_no, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.adult.phone_no, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.juvenile.adult_member_no, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.juvenile.adult_member_no, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.juvenile.adult_member_no, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.juvenile.birth_date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.juvenile.birth_date, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.juvenile.birth_date, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
   </div>
}

<div>
    @Html.ActionLink("Back to Previous Page", null, null, null, new { href = Request.UrlReferrer })
</div>

@section Scripts {
    
}
