@model List<LibrarySite.Models.member>

<div id="memberloanInfo" class="form-horizontal">
    @if (Model != null)
    { 
        foreach (var item in Model)
        {
            if (item.member_type == "Adult")
            {
                if (item.adult.expr_date < DateTime.Now)
                {

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Renew Adult Members Expiration Date" class="btn btn-default" />
                        </div>
                    </div>
                }

                <div class="form-group">
                    @Html.LabelFor(modelItem => item.adult.expr_date, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DisplayFor(modelItem => item.adult.expr_date, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
            }
            else
            {
                <div class="form-group">
                    @Html.LabelFor(modelItem => item.juvenile.adult.expr_date, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DisplayFor(modelItem => item.juvenile.adult.expr_date, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(modelItem => item.juvenile.adult_member_no, "Adult Member", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DisplayFor(modelItem => item.juvenile.adult.member.firstname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.DisplayFor(modelItem => item.juvenile.adult.member.middleinitial, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.DisplayFor(modelItem => item.juvenile.adult.member.lastname, new { htmlAttributes = new { @class = "form-control" } })
                        &#40;@Html.DisplayFor(modelItem => item.juvenile.adult_member_no, new { htmlAttributes = new { @class = "form-control" } })&#41;
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(modelItem => item.juvenile.birth_date, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DisplayFor(modelItem => item.juvenile.birth_date, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
            }
            <div class="form-group">
                @Html.LabelFor(modelItem => item.firstname, "Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(modelItem => item.firstname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.DisplayFor(modelItem => item.middleinitial, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.DisplayFor(modelItem => item.lastname, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            if (item.member_type == "Adult")
            {
                <div class="form-group">
                    @Html.LabelFor(modelItem => item.adult.street, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DisplayFor(modelItem => item.adult.street, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(modelItem => item.adult.city, "City, State, Zip", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DisplayFor(modelItem => item.adult.city, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.DisplayFor(modelItem => item.adult.state, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.DisplayFor(modelItem => item.adult.zip, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(modelItem => item.adult.phone_no, "Telephone", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DisplayFor(modelItem => item.adult.phone_no, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
            }
            else
            {
                <div class="form-group">
                    @Html.LabelFor(modelItem => item.juvenile.adult.street, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DisplayFor(modelItem => item.juvenile.adult.street, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(modelItem => item.juvenile.adult.city, "City, State, Zip", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DisplayFor(modelItem => item.juvenile.adult.city, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.DisplayFor(modelItem => item.juvenile.adult.state, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.DisplayFor(modelItem => item.juvenile.adult.zip, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(modelItem => item.juvenile.adult.phone_no, "Telephone", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DisplayFor(modelItem => item.juvenile.adult.phone_no, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
            }

            if (item.loans.Count >= 4)
            {
                <div id="divmaxmsg" class="col-md-offset-2 col-md-10 text-warning">
                    <label class="control-label">Member has checked out the maximum allowed number of books, @DefaultValues.MaxCheckOutItemLimit.</label>
                </div>
            }

            if (TempData["JuvenileConvertMessage"] != null)
            {
                <div id="divjuvenilemsg" class="col-md-offset-2 col-md-10 text-left text-warning">
                    <label class="control-label">@TempData["JuvenileConvertMessage"]</label>
                </div>
            }

            if (item.member_type == "Adult")
            {
                if (item.adult.expr_date < DateTime.Now)
                {
                    <div class="col-md-offset-2 col-md-10 text-warning">
                        <label class="control-label">Member's card has expired on @Html.DisplayFor(modelItem => item.adult.expr_date).</label>
                    </div>
                }
            }
            else
            {
                if (item.juvenile.adult.expr_date < DateTime.Now)
                {
                    <div class="col-md-offset-2 col-md-10 text-warning">
                        <label class="control-label">Member's card has expired on @Html.DisplayFor(modelItem => item.juvenile.adult.expr_date).</label>
                    </div>
                }
            }

        <p>
            @Html.Label("Outstanding Loans", htmlAttributes: new { @class = "control-label col-md-2" })
        </p>
        if (item.loans.Count > 0) {
        <table id="tblloans" class="table-bordered">
            <tr class="trloans">
                <th>
                    ISBN
                </th>
                <th>
                    Copy
                </th>
                <th>
                    Title
                </th>
                <th>
                    Author
                </th>
                <th>
                    Checkout Date
                </th>
                <th>
                    Due Date
                </th>
                <th></th>
            </tr>
            @foreach (var i in item.loans)
            {       
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => i.isbn)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => i.copy_no)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => i.title.title1)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => i.title.author)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => i.out_date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => i.due_date)
                </td>
            </tr>
            }
        </table>
      }
      else 
      { 
        <table id="msgnobooks">
            <tr><td>No books are on loan by member.</td></tr>
        </table>
      }
     }
    }
</div>
<script src="../scripts/jquery-1.12.4.min.js" type="text/javascript"></script>
<script type="text/javascript">
    $("tr td:nth-child(6)").each(function () {
        var duedate = Date.parse($(this).text());
        var currentdate = new Date();
        if (duedate < currentdate) {
            $(this).parent("tr").css("background-color", "yellow");
        }
    });
</script>





