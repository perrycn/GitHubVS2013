//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LibrarySite.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Web.Mvc;

    public partial class adult
    {
        public adult()
        {
            this.juveniles = new HashSet<juvenile>();
            this.expr_date = DefaultValues.NewExpirationDate;
        }

        private string _phone_no;
        private string _zip;

        [Display(Name = "Member No.")]
        public short member_no { get; set; }

        [Display(Name = "Street")]
        [Required(ErrorMessage = "Street is required.")]
        [StringLength(15, ErrorMessage = "Street length must be from 1 to 15 chars.")]
        public string street { get; set; }

        [Display(Name = "City")]
        [Required(ErrorMessage = "City is required.")]
        [StringLength(15, ErrorMessage = "City length must be from 1 to 15 chars.")]
        public string city { get; set; }

        [Display(Name = "State")]
        [Required(ErrorMessage = "State is required.")]
        public string state { get; set; }

        [Display(Name = "Zip Code")]
        [Required(ErrorMessage = "Zip Code is required.")]
        [StringLength(10, ErrorMessage = "Zip Code length must be 5 to 10 chars.", MinimumLength = 5)]
        [RegularExpression(@"^([0-9]{5}-?([0-9]{4})?)$", ErrorMessage = "Zip Code must be entered in the format, ##### or #####-####, where # = a number.")]
        public string zip
        {
            get
            {
                return _zip;
            }
            set
            {
                _zip = value.Trim();
            }
        }
        [Display(Name = "Phone No.")]
        [DisplayFormat(NullDisplayText = "")]
        [RegularExpression(@"^((\(([0-9]{3})\)|([0-9]{3})[-])([0-9]{3})[-]([0-9]{4}))|(\s{0,})$", ErrorMessage = "Phone Number must be entered in the format, ###-###-#### or (###)###-####, where # = a number.")]
        public string phone_no
        {
            get
            {
                if (_phone_no != null)
                {
                    return (_phone_no.Trim() != "NULL" ? _phone_no : "");
                }
                else return null;
            }
            set
            {
                if (value != null)
                {
                    _phone_no = value.Trim();
                }
                else
                {
                    _phone_no = "";
                }

            }
        }
        [Display(Name = "Expiration Date")]
        [Required(ErrorMessage = "Expiration Date is required.")]
        [DataType(DataType.DateTime)]
        [DisplayFormat(DataFormatString = "{0:MM/dd/yyyy hh:mm}")]
        public System.DateTime expr_date { get; set; }

        public virtual member member { get; set; }
        public virtual ICollection<juvenile> juveniles { get; set; }
    }
}
